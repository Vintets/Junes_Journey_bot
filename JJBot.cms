#name "Junes Journey bot"
// Author: Vint
// Version: 1.9.10 (11.04.2025)
// Скрипт для Clickermann v4.14.003b

#define @CRLF: STRCONCAT(char(13),char(10))
#define \n: STRCONCAT(char(13),char(10))
#define @TAB: char(9)

#include "arrey.cms"
#include "string.cms"


//                              Настройки
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

//          *** Настройки эмулятора MEmu Play / NoxPlayer ***
// разрешение экрана рабочей области    1600x900
// ориентация  - альбомная
// ----- Nox -----
$emulator_Nox_win_name = "NoxPlayer_Android7"   // Имя окна эмулятора NoxPlayer
$textures_version_Nox = "Nox_2024.07"           // суффикс папки с текстурами для NoxPlayer
// ----- MEmu -----
$emulator_MEmu_win_name = "MEmu main"           // Имя окна эмулятора MEmu
$textures_version_MEmu = "MEmu_2025.02.26_hd"   // суффикс папки с текстурами для MEmu
// ----- ScreenShot -----
$textures_version_Test = "MEmu_2025.02.26_hd"  // суффикс папки с текстурами для Test

// $select_emulator = "Nox"   // использовать эмулятор Nox
// $select_emulator = "MEmu"  // использовать эмулятор MEmu
$select_emulator = "Test"  // по скриншоту, XnView развёрнут на полный экран

//-----------------------------------------------
// номер сцены по умолчанию (0 - определять автоматически последнюю сцену TODO)
$default_scene_number = 848

// копить энергию перед отправкой решения сцен
$accumulate_energy = 10

// уровень логирования 0-NOTSET, 1-CRITICAL 2-ERROR 3-WARNING 4-INFO 5-DEBUG
$loglevel = 5

// главная задержка после клика (при автомате)
$wait_click_found = 500 //250

// путь к директории с данными сцен
$scenes_path = "scenes\"

//-----------------------------------------------
//          *** Настройки OCR ***
$ocrexe = "Capture2Text\Capture2Text_CLI.exe"  // lnk
$ocrimg[0] = STRCONCAT($scenes_path, "ocr_img1.bmp")
$ocrimg[1] = STRCONCAT($scenes_path, "ocr_img2.bmp")
$ocrimg[2] = STRCONCAT($scenes_path, "ocr_img3.bmp")
$ocrimg_one = STRCONCAT($scenes_path, "ocr_img_one.bmp")
$ocrimgdummy = "textures\ocr_imgdummy.bmp"
$ocroutfile = STRCONCAT($scenes_path, "ocr_result.txt")
$scenes_ini = STRCONCAT($scenes_path, "scenes.ini")
$screenshots_scenes_path = STRCONCAT($scenes_path, "screenshots_scenes\")
$allowed_char = " абвгдеёжзийклмнопрстуфхцчшщъыьэюяАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ0123456789«»"
$allowed_digit = "0123456789"

// out file
$ocrparbase = STRCONCAT(" --language Russian -o ", $ocroutfile)
//-----------------------------------------------

$locations_raw_names = "location not determined, , , , ,load game, , , , ,island,scene cards,discount,advertising timer,advertising is over,touch for start,hidden object scene,scene finish,play more"
$scenes_in_tome_count = "500,250,125"  // количество сцен в томе

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡

SUB(critical_error, $ce_message)
    LOGWRITEC(STRCONCAT("***** Critical_error!!! ***  ", $ce_message), 255)
    HALT
END_SUB

SUB(log_region, $lr_x1, $lr_y1, $lr_x2, $lr_y2)
    IF($loglevel >= 5)
        $lr_x1 = $wx1 + $lr_x1
        $lr_y1 = $wy1 + $lr_y1
        $lr_x2 = $wx1 + $lr_x2
        $lr_y2 = $wy1 + $lr_y2
        LOGWRITE("Задана область:  ", $lr_x1, ",", $lr_y1, ", ", $lr_x2, ",", $lr_y2)
    END_IF
END_SUB

SUB(set_location, $sl_location_num)
    IF(($sl_location_num < 0) | ($sl_location_num >= ARRSIZE($locations_list)))
        critical_error(STRCONCAT("Invalid location number ", $sl_location_num))
    END_IF
    $location = $sl_location_num
    $location_name = $locations_list[$sl_location_num]
END_SUB

SUB(emulator_window_definition)
    // получение параметров Nox/MEmu
    LOGWRITE("Выбран эмулятор ", $select_emulator)
    IF($select_emulator = "Nox")
        $emulator_win_name = $emulator_Nox_win_name
        $win_frame_size = 2
        $win_header_size = 32
        $win_right_panel_size = 38
    ELSE // MEmu
        $emulator_win_name = $emulator_MEmu_win_name
        $win_frame_size = 1
        $win_header_size = 32
        $win_right_panel_size = 39
        $emulator_win_name = STRCONCAT("(", $emulator_win_name, ")")
    END_IF


    $emulator = WNDFIND($emulator_win_name)
    WNDGETINFO($emulator, $win_x, $win_y, $win_w, $win_h)
    IF($loglevel >= 4)
        LOGWRITE($select_emulator, ": ", $emulator, ", ", $win_x, ",", $win_y, "  ", $win_w, "x", $win_h)
        // Nox
        // 172, 75      1604x934
        // 172, 75      1642x934

        // MEmu
        // 159, 53      1602x933
        // 159, 53      1641x933
    END_IF

    IF($emulator == 0)
        critical_error(STRCONCAT("Не найдено окно ", $select_emulator))
    END_IF
    IF(($win_x < 0) | ($win_y < 0))
        critical_error(STRCONCAT("Окно ", $select_emulator, " свёрнуто"))
    END_IF
END_SUB

SUB(parse_scene_number, $p_scene_number)
    // return:
    // $scene_tome =
    // $scene_chapter =
    // $scene_chapter_position =

    // calc Том
    FOR($i=0, $i < ARRSIZE($scenes_total_list))
        IF($p_scene_number > $scenes_total_list[$i])
            $scene_tome = $i + 1
            // LOGWRITE("total = ", $scenes_total_list[$i], "  $scene_tome = ", $scene_tome)
        END_IF
    END_CYC

    // calc Номер сцены в текущем томе (промежуточное значение)
    $scene_in_current_tome = $p_scene_number - $scenes_total_list[$scene_tome - 1]

    // calc Глава
    $scene_chapter = INT(($scene_in_current_tome - 1) / 5) + 1

    // calc Позиция в главе
    $scene_chapter_position = $scene_in_current_tome - (($scene_chapter - 1) * 5)

    IF($loglevel >= 5)
        LOGWRITE()
        LOGWRITE("Расчёт сцены:    ", $p_scene_number)
        LOGWRITE("Том:             ", $scene_tome)
        LOGWRITE("Сцена в томе:    ", $scene_in_current_tome)
        LOGWRITE("Глава:           ", $scene_chapter)
        LOGWRITE("Позиция в главе: ", $scene_chapter_position, \n)
    END_IF
END_SUB

SUB(init)
    LOGCLEAR
    IF($loglevel > 0)
        LOGSHOW(1, 1920, 510)
        WAITMS(300)
        $hwnd_log = WNDFIND("Лог")
        WNDSIZE($hwnd_log, 384, 500)
        LOGSHOW(1, 1920, 510)
    ELSE
        WAITMS(200)
    END_IF

    $imdelta_x = 0
    $imdelta_y = 0

    IF($select_emulator == "Nox")
        $textures_version = $textures_version_Nox
    END_IF
    IF($select_emulator == "MEmu")
        $textures_version = $textures_version_MEmu
    END_IF
    IF($select_emulator == "Test")
        $textures_version = $textures_version_Test
    END_IF
    $textures = STRCONCAT("textures\textures_", $textures_version, "\")

    // получаем основные рабочие координаты
    IF($select_emulator != "Test")
        emulator_window_definition()
    ELSE
        // со скриншота, XnView развёрнут на полный экран
        $win_x = 160
        $win_y = 110
        $win_w = 1600
        $win_h = 900
        $win_frame_size = 0
        $win_header_size = 0
        IF($loglevel >= 4)
            LOGWRITE("Режим теста по скриншоту")
            LOGWRITE("ScreenShot: ", $win_x, ",", $win_y, "  ", $win_w, "x", $win_h)
        END_IF
    END_IF

    // window sub
    $wx1 = $win_x + $win_frame_size
    $wy1 = $win_y + $win_header_size
    $win_w = $win_w - ($win_frame_size * 2)
    $win_h = $win_h - ($win_header_size + $win_frame_size)

    IF($win_w = 1600 + $win_right_panel_size)
        $win_w = $win_w - $win_right_panel_size
    END_IF

    $wx2 = $wx1 + $win_w - 1
    $wy2 = $wy1 + $win_h - 1
    IF($loglevel >= 4)
        LOGWRITE("Main field: ", $wx1, ",", $wy1, "  ", $wx2, ",", $wy2, "  ", $win_w, "x", $win_h)
    END_IF

    // items zone
    $itx1 = $wx1 + 36
    $ity1 = $wy1 + 821
    $itx2 = $wx1 + 1407
    $ity2 = $wy1 + 864

    // play button delta
    $play_x = 1495
    $play_y = 795

    // создаём массив $locations_list
    STRSEPARATE($locations_raw_names, ",", $locations_list)
    set_location(0)

    $energy = -1

    // создаём массив $scenes_in_tome_list
    STRSEPARATE($scenes_in_tome_count, ",", $scenes_in_tome_list)
    IF($loglevel >= 5)
        LOGWRITE("Количество сцен в томе (массив $scenes_in_tome_list):")
        LOG_ARR("$scenes_in_tome_list", ARRSIZE($scenes_in_tome_list))
    END_IF

    // создаём массив $scenes_total_list
    $temp_scene_total = 0
    $scenes_total_list[0] = 0
    FOR($i=0, $i < ARRSIZE($scenes_in_tome_list))
        $temp_scene_total = $temp_scene_total + $scenes_in_tome_list[$i]
        $scenes_total_list[$i+1] = $temp_scene_total
    END_CYC
    IF($loglevel >= 5)
        LOGWRITE("Количество сцен до тома (массив $scenes_total_list):")
        LOG_ARR("$scenes_total_list", ARRSIZE($scenes_total_list))
    END_IF

    IF($default_scene_number != 0)
        $target_scene_number = $default_scene_number
        parse_scene_number($target_scene_number)
        $target_scene_tome = $scene_tome
        $target_scene_chapter = $scene_chapter
        $target_scene_chapter_position = $scene_chapter_position
    ELSE
        $target_scene_number = 0
    END_IF

    LOGWRITE(\n, \n, "*************************************************")
END_SUB

SUB(set_abs_region, $sar_x1, $sar_y1, $sar_x2, $sar_y2)
    // задать абсолютный регион $ar_x1, $ar_y1, $ar_x2, $ar_y2
    $ar_x1 = $wx1 + $sar_x1
    $ar_y1 = $wy1 + $sar_y1
    $ar_x2 = $wx1 + $sar_x2
    $ar_y2 = $wy1 + $sar_y2
END_SUB

SUB(find_pic_nw, $fpnw_x1,$fpnw_y1,$fpnw_x2,$fpnw_y2, $fpnw_image, $fpnw_percent, $fpnw_colorm)
    // поиск картинки без ожидания
    $is_found = #FALSE
    set_abs_region($fpnw_x1,$fpnw_y1,$fpnw_x2,$fpnw_y2)
    IF($parking)
        MOVE($wx2, $wy2)  //паркуемся
        WAITMS(20)
    END_IF

    IF($loglevel == 5)
        LOGWRITE("Ищем картинку ", STRCONCAT($textures, $fpnw_image))
    END_IF

    GETSCREEN($ar_x1, $ar_y1, $ar_x2, $ar_y2)
    IF($fpnw_colorm != 0)
        COLORMODE($fpnw_colorm, $ar_x1, $ar_y1, $ar_x2, $ar_y2)
    END_IF
    IF_PICTURE_IN($ar_x1, $ar_y1, $ar_x2, $ar_y2, STRCONCAT($textures, $fpnw_image), 65280, $fpnw_percent)
        $is_found = #TRUE
        $found_x = $_return1
        $found_y = $_return2
        IF($loglevel >= 4)
            LOGWRITE("Найдено  ", $fpnw_image, "  в ", $_return1, "/", $_return2)
        END_IF
    ELSE
        WAITMS(20)
    END_IF
END_SUB

SUB(find_pic_wait, $fpw_x1,$fpw_y1,$fpw_x2,$fpw_y2,$fpw_image, $fpw_percent, $fpw_colorm, $fpw_wait)
    // ожидание картинки
    MOVE($wx2, $wy2)  //паркуемся
    WAITMS(20)
    $parking = #FALSE
    $is_found = #FALSE
    $time_notfound = $_ms + ($fpw_wait * 1000)
    WHILE(($is_found == #FALSE) & ($time_notfound > $_ms))
        find_pic_nw($fpw_x1,$fpw_y1,$fpw_x2,$fpw_y2, $fpw_image, $fpw_percent, $fpw_colorm)
    END_CYC
    IF($is_found == #FALSE)
        LOGWRITE("время истекло, картинка не найдена")
    END_IF
    $parking = #TRUE
END_SUB

SUB(waiting_disappear, $wd_x1,$wd_y1,$wd_x2,$wd_y2,$wd_image, $wd_percent, $wd_colorm, $wd_wait, $wd_period)
    // ожидание исчезновения картинки
    // $wd_image - искомое изображение
    // $wd_percent - процент совпадения
    // $wd_colorm - режим COLORMODE
    // $wd_wait - искать в течении (секунд)
    // $wd_period - частота проверки (миллисекунд)
    MOVE($wx2, $wy2)  //паркуемся
    WAITMS(20)
    $parking = #FALSE
    $is_found = #TRUE
    $time_notfound = $_ms + ($wd_wait * 1000)
    WHILE(($is_found) & ($time_notfound > $_ms))
        find_pic_nw($wd_x1,$wd_y1,$wd_x2,$wd_y2, $wd_image, $wd_percent, $wd_colorm)
        WAITMS($wd_period)
    END_CYC
    IF(($is_found) & ($loglevel >= 4))
        LOGWRITE("время истекло, картинка не исчезла")
    END_IF
    $parking = #TRUE
END_SUB

SUB(get_location)
    // locations:
    // 0 - location not determined     - локация не определена
    // 5 - load game                   - экран загрузки игры
    // 10 - island                      - главный экран (остров орхидей)
    // 11 - scene cards                 - карточки выбора сцены
    // 12 - discount                    - скидка за рекламу
    // 13 - advertising timer           - реклама таймер
    // 14 - advertising is over         - сбой рекламы
    // 15 - touch for start             - коснитесь, чтобы начать
    // 16 - hidden object scene         - сцена поиска предметов
    // 17 - scene finish                - сцена пройдена (экран)
    // 18 - play more                   - играть ещё (продолжить на этой же сцене)
    // *detective - требуются детективы
    // *cafe - кафе
    // *drink - выставить напиток
    // *help Wanted - требуется помощь

    set_location(0)

    // 16 hidden object scene
    IF($location == 0)
        find_pic_nw(1518,32,1562,73, "pause.bmp", 100, 7)
        IF($is_found)
            set_location(16)
        END_IF
    END_IF

    // 10 island - остров
    IF($location == 0)
        // find_pic_nw(474,28,500,48, "money.bmp", 80, 0)
        find_pic_nw(14,14,83,83, "avatar.bmp", 95, 0)
        IF($is_found)
            set_location(10)
        END_IF
    END_IF

    // 11 scene cards - карточки выбора сцены
    IF($location == 0)
        find_pic_nw(485,810,516,840, "arrow_left.bmp", 95, 7)
        IF($is_found)
            set_location(11)
        END_IF
    END_IF
    IF($location == 0)
        find_pic_nw(1080,795,1115,826, "arrow_right.bmp", 95, 7)
        IF($is_found)
            set_location(11)
        END_IF
    END_IF

    // 15 touch for start - коснитесь чтобы начать
    IF($location == 0)
        find_pic_nw(270, 420, 800, 470, "touch.bmp", 95, 0)
        IF($is_found)
            set_location(15)
        END_IF
    END_IF

    // 12 discount - скидка за рекламу
    IF($location == 0)
        find_pic_nw(410, 746, 570, 758, "discount.bmp", 97, 7)
        IF($is_found)
            set_location(12)
        END_IF
    END_IF

    // 13 advertising timer - реклама таймер
    IF($location == 0)
        find_pic_nw(782, 406, 818, 442, "advertising_timer.bmp", 100, 0)
        IF($is_found)
            set_location(13)
        END_IF
    END_IF

    // 14 advertising is over - сбой рекламы
    IF($location == 0)
        find_pic_nw(697, 655, 827, 661, "advertising_over.bmp", 97, 7)
        IF($is_found)
            set_location(14)
        END_IF
    END_IF

    // 17 scene finish - сцена пройдена (экран)
    IF($location == 0)
        find_pic_nw(562, 848, 658, 854, "scene_finish.bmp", 95, 7)
        IF($is_found)
            set_location(17)
        END_IF
    END_IF

    // 18 play more - играть ещё (продолжить на этой же сцене)
    IF($location == 0)
        find_pic_nw(268, 810, 420, 820, "play_more.bmp", 95, 7)
        IF($is_found)
            set_location(18)
        END_IF
    END_IF

    // 5 load game 1 - экран загрузки игры
    IF($location == 0)
        find_pic_nw(780, 280, 810, 305, "load_1.bmp", 100, 0)
        IF($is_found)
            set_location(5)
        END_IF
    END_IF

    // IF(($loglevel >= 3) & ($location != 0))
    IF($loglevel >= 4)
        LOGWRITE("location = ", $location_name, " (", $location, ")")
    END_IF
END_SUB

SUB(waiting_change_location, $wcl_location)
    IF($wcl_location == 5)
        waiting_disappear(780, 280, 810, 305, "load_1.bmp", 100, 0, 40, 1000)
        WAIT(1.5)
        get_location()
    END_IF

    IF($wcl_location == 13)
        waiting_disappear(782, 406, 818, 442, "advertising_timer.bmp", 100, 0, 40, 2000)
        WAITMS(300)
        get_location()
    END_IF
END_SUB

SUB(get_hash_scene)
    $isDataScene = #FALSE

    MOVE($wx2, $wy2)  //паркуемся
    WAITMS(10)
    GETSCREEN($wx1,$wy2-4, $wx1+999,$wy2)
    $hash_scene = PXLCRC($wx1,$wy2-4, $wx1+999,$wy2)
    LOGWRITE("hash_scene ", $hash_scene)

    $hash_scene_file = INIREAD($scenes_ini, "hash_scene", $hash_scene)
    IF($hash_scene_file != "")
        $isDataScene = #TRUE
    END_IF
END_SUB

SUB(is_task_fill)
    // проверяем какие задания есть, а какие закончились (из 3-х)
    UNDEFINE($tasks)
    // task 1
    IF_PICTURE_IN($wx1+50,$wy1+865, $wx1+430,$wy1+882, "textures\is_task.bmp", -1, 100)
        ARRPUSH($tasks, #TRUE)
    ELSE
        ARRPUSH($tasks, #FALSE)
    END_IF
    // task 2
    IF_PICTURE_IN($wx1+530,$wy1+865, $wx1+910,$wy1+882, "textures\is_task.bmp", -1, 100)
        ARRPUSH($tasks, #TRUE)
    ELSE
        ARRPUSH($tasks, #FALSE)
    END_IF
    // task 3
    IF_PICTURE_IN($wx1+1010,$wy1+865, $wx1+1390,$wy1+882, "textures\is_task.bmp", -1, 100)
        ARRPUSH($tasks, #TRUE)
    ELSE
        ARRPUSH($tasks, #FALSE)
    END_IF
    IF($loglevel >= 4)
        LOGWRITE("Tasks  ", $tasks[0], "-", $tasks[1], "-", $tasks[2])
    END_IF
END_SUB

SUB(correct_photo_items, $cpi_nums)
    $param_main = STRCONCAT(" /C Start Python correct_img.py ", $cpi_nums)
    // LOGWRITE("$param_main ", $param_main)
    EXECUTE("cmd.exe", $param_main)
END_SUB

SUB(photo_items_all)
    GETSCREEN($itx1, $ity1, $itx2, $ity2+18)
    COLORMODE(8, $itx1, $ity1, $itx2, $ity2+18)
    //SCREENSHOTFIX($wx1,$wy1, $wx2,$wy2, "screens\items.bmp", 0)
    is_task_fill()
END_SUB

SUB(photo_items)
    // сохранение снимков слов
    MOVE($wx2, $wy2)  //паркуемся
    WAITMS(20)
    photo_items_all()
    // интервал X  477,
    // Ширина поля 417    $ipw = 417
    $correct_nums = ""
    FOR($i=0, $i < 3)
        IF($tasks[$i])
            SCREENSHOTFIX($wx1 + 36 + ($i*477),$ity1, $wx1 + 453 + ($i*477),$ity2, $ocrimg[$i], 0)
            IF($correct_nums == "")
                $correct_nums = STRCONCAT($correct_nums, $i + 1)
            ELSE
                $correct_nums = STRCONCAT($correct_nums, " ", $i + 1)
            END_IF
        END_IF
    END_CYC
    // SCREENSHOTFIX($wx1+ 36,$ity1, $wx1+ 453,$ity2, $ocrimg[0], 0)
    // SCREENSHOTFIX($wx1+513,$ity1, $wx1+ 930,$ity2, $ocrimg[1], 0)
    // SCREENSHOTFIX($wx1+990,$ity1, $wx1+1407,$ity2, $ocrimg[2], 0)
    correct_photo_items($correct_nums)
END_SUB

SUB(main_screenshot_scene)
    MOVE($wx2+2, $wy2+2)  //паркуемся
    WAITMS(20)
    $screenshot_scene = STRCONCAT($screenshots_scenes_path, "Scene_", $scene_number, "_", $hash_scene, ".bmp")
    GETSCREEN($wx1,$wy1, $wx2,$wy2)
    SCREENSHOTFIX($wx1,$wy1, $wx2,$wy2, $screenshot_scene, 0)
END_SUB

SUB(rel_move, $rm_delta_x, $rm_delta_y)
    MOVE($wx1 + $rm_delta_x, $wy1 + $rm_delta_y)
END_SUB

SUB(click, $cldelta_x, $cldelta_y)
    IF($is_found)
        IF($select_emulator != "Test")
            LCLICK($wx1+$cldelta_x, $wy1+$cldelta_y)
        ELSE
            rel_move($cldelta_x, $cldelta_y)  // если тест
        END_IF
        IF($loglevel >= 5)
            LOGWRITE("Клик ", $wx1+$cldelta_x, "  ", $wy1+$cldelta_y)
        END_IF
        WAITMS(300)
    END_IF
END_SUB

SUB(click_found, $clf_delta_x, $clf_delta_y)
    IF($is_found)
        IF($select_emulator != "Test")
            LCLICK($found_x + $clf_delta_x, $found_y + $clf_delta_y)
        ELSE
            MOVE($found_x + $clf_delta_x, $found_y + $clf_delta_y)  // если тест
        END_IF
        IF($loglevel >= 5)
            LOGWRITE("Клик ", $found_x+$clf_delta_x, "  ", $found_y+$clf_delta_y)
        END_IF
        WAITMS(300)
    END_IF
END_SUB

SUB(read_data_scene)
    UNDEFINE($items)

    $items_filename = STRCONCAT($scenes_path, $scene_number, "_", $hash_scene, ".txt")
    $scene_folder = STRCONCAT($scenes_path, "scene_", $scene_number)
    //LOGWRITE($items_filename)

    IF($isDataScene == #FALSE)
        IF($loglevel >= 3)
            LOGWRITE("Нет данных по уровню")
        END_IF
        INIWRITE($scenes_ini, "scene_number", $scene_number, $hash_scene)
        INIWRITE($scenes_ini, "hash_scene", $hash_scene, $hash_scene)
        //FCREATE($scene_folder)
    ELSE
        IF($loglevel >= 4)
            LOGWRITE("Найдены данные уровня ", $scene_number, "  - ", $hash_scene_file)
        END_IF
        //TFREADARR($items_filename, $items)
    END_IF
END_SUB

SUB(read_items)
    UNDEFINE($items_str)
    UNDEFINE($items)
    $items_filename = STRCONCAT($scenes_path, $scene_number, "_", $hash_scene, ".txt")
    TFREADARR($items_filename, $items_str)
    $items_str_size = ARRSIZE($items_str)
    IF($loglevel >= 5)
        LOGWRITE("-INFO- size items ", $items_str_size)
    END_IF
    FOR($i=0, $i < $items_str_size)
        STRSEPARATE($items_str[$i], ",", $data)
        ARRPUSH($items, $data[0])
        ARRPUSH($items, $data[1])
        ARRPUSH($items, $data[2])
    END_CYC
END_SUB

//------------------------------------------------------------------------------
SUB(create_ocr_par)
    $ocrpar = $ocrparbase
    FOR($i=0, $i < 3)
        IF($tasks[$i])
            $ocrpar = STRCONCAT($ocrpar, " -i ", $ocrimg[$i])
        // ELSE
        //     $ocrpar = STRCONCAT($ocrpar, " -i ", $ocrimgdummy)
        END_IF
    END_CYC
    IF($loglevel >= 5)
        LOGWRITE($ocrpar)
    END_IF
END_SUB

SUB(create_ocr_par_one, $copo_allowed)
    $ocrpar = STRCONCAT($ocrparbase, " --whitelist ", $copo_allowed)
    $ocrpar = STRCONCAT($ocrpar, " -i ", $ocrimg_one)
    // $ocrpar = STRCONCAT($ocrparbase, " -i ", $ocrimg_one)
    // IF($loglevel >= 5)
    //     LOGWRITE($ocrpar)
    // END_IF
END_SUB

SUB(ocr, $ocr_par)
    EXECUTE($ocrexe, $ocr_par)
    WAITMS(100)

    $waitw = $_time_t + 10 //Ждать $ocrexe не больше секунд
    WHILE(WNDFIND($ocrexe) > 0 & $waitw >= $_time_t)
        WAITMS(50)
    END_CYC
END_SUB

SUB(ocr_result_filter_char)
    IF($allowed_char != "")
        FOR($res_i=0, $res_i < ARRSIZE($ocr_result))
            $ocr_result[$res_i] = STRFILTER($ocr_result[$res_i], $allowed_char, 1)
        END_CYC
    END_IF
END_SUB

SUB(ocr_result_strip)
    FOR($res_i=0, $res_i < ARRSIZE($ocr_result))
        strip($ocr_result[$res_i])
        $ocr_result[$res_i] = $strip_str
    END_CYC
END_SUB

SUB(read_ocr_result)
    UNDEFINE($ocr_result)
    TFREADARR($ocroutfile, $ocr_result)
    FOR($res_i=1, $res_i < ARRSIZE($ocr_result))
        $ocr_result[$res_i] = STRCUT($ocr_result[$res_i], 2, 40)
    END_CYC
    ocr_result_filter_char()
    ocr_result_strip()
    IF($loglevel >= 4)
        LOGWRITE("Слова: ")
        LOG_ARR("$ocr_result", ARRSIZE($ocr_result))
        // LOGWRITE("Слова: -", $ocr_result[0], "-", $ocr_result[1], "-", $ocr_result[2], "-")
    END_IF
END_SUB

SUB(ocr_result_filter_one, $orfo_allowed)
    IF($orfo_allowed != "")
        $ocr_result = STRFILTER($ocr_result, $orfo_allowed, 1)
    END_IF
END_SUB

SUB(read_ocr_result_one, $roro_allowed)
    UNDEFINE($ocr_result)
    $ocr_result = TFREAD($ocroutfile, 1)
    ocr_result_filter_one($roro_allowed)
    strip($ocr_result)
    $ocr_result = $strip_str

    IF($loglevel >= 5)
        LOGWRITE("Распознаны символы: ", $ocr_result)
    END_IF
END_SUB

SUB(capture_one, $co_colorm)
    // захватить для распознавания одиночную картинку (работает с абсолютным регионом $ar)
    MOVE($wx2, $wy2)  //паркуемся
    WAITMS(10)
    GETSCREEN($ar_x1, $ar_y1, $ar_x2, $ar_y2)
    IF($co_colorm)
        COLORMODE($co_colorm, $ar_x1, $ar_y1, $ar_x2, $ar_y2)
    END_IF
END_SUB

SUB(ocr_one, $soo_allowed)
    // распознать одиночную картинку (работает с абсолютным регионом $ar)
    SCREENSHOTFIX($ar_x1, $ar_y1, $ar_x2, $ar_y2, $ocrimg_one, 0)
    // correct_photo_items("4")
    create_ocr_par_one($soo_allowed)
    ocr($ocrpar)
    read_ocr_result_one($soo_allowed)
END_SUB

SUB(scan_energy)
    // return $energy
    UNDEFINE($energy)
    capture_one(7)
    PXLREPLACE($ar_x1, $ar_y1, $ar_x2, $ar_y2, 8355711, 8388607)
    PXLREPLACE($ar_x1, $ar_y1, $ar_x2, $ar_y2, 8355839, 8388607)
    ocr_one($allowed_digit)
    $energy = $ocr_result
    IF($loglevel >= 4)
        LOGWRITE("Энергия: ", $energy)
    END_IF
END_SUB

SUB(scan_scene_number)
    // return $card_scene_number
    UNDEFINE($card_scene_number)
    capture_one(7)
    ocr_one($allowed_digit)
    $card_scene_number = $ocr_result
    IF($loglevel >= 4)
        LOGWRITE("Номер карточки сцены: ", $card_scene_number)
    END_IF
END_SUB

SUB(scan_current_scene_chapter)
    // return $current_scene_chapter
    UNDEFINE($current_scene_chapter)
    set_abs_region(772, 789, 823, 840)
    capture_one(6)
    ocr_one($allowed_digit)
    $current_scene_chapter = $ocr_result
    IF($loglevel >= 4)
        LOGWRITE("Текущая глава: ", $current_scene_chapter)
    END_IF
END_SUB
//------------------------------------------------------------------------------

SUB(find_click_3words)
    $found_words = #FALSE
    FOR($iocr=0, $iocr < ARRSIZE($ocr_result))
        $word = $ocr_result[$iocr]
        IF($word != "")
            $found_item = #FALSE
            $items_size = ARRSIZE($items)
            FOR($index=0, $index < $items_size, 3)
                $item_name = $items[$index]
                //LOGWRITE($word, "==", $item_name)
                IF($word = $item_name)
                    $item_x = $items[$index+1]
                    $item_y = $items[$index+2]
                    $index = 1000
                    $found_item = #TRUE
                    $found_words = #TRUE
                END_IF
            END_CYC

            IF($found_item == #TRUE)
                LOGWRITEC(STRCONCAT("Найден предмет: '", $word, "' ", $item_x, "x", $item_y), 433934)
                IF($select_emulator != "Test")
                    LCLICK($wx1 + $item_x, $wy1 + $item_y)
                ELSE
                    MOVE($wx1 + $item_x, $wy1 + $item_y)  // тест
                END_IF
                WAITMS($wait_click_found)
            ELSE
                IF($loglevel >= 4)
                    LOGWRITE("нет данных для - ", $word)
                END_IF
            END_IF
        END_IF
    END_CYC
END_SUB

SUB(automat_click_words)
    // поиск извесных картинок автоматом
    photo_items()
    create_ocr_par()
    ocr($ocrpar)
    read_ocr_result()
    //read_items()
    find_click_3words()
END_SUB

SUB(input_scene_number)
    $input_sn = INPUTBOX("Номер уровня", $default_scene_number, 2)
    IF($input_sn == "")
        LOGWRITEC("Отменён выбор уровня. Стоп.", 255)
        HALT
    END_IF
    LOGWRITE("Введён уровень: ", $input_sn)
END_SUB

SUB(add_item, $it_name, $it_x, $it_y)
    LOGWRITEC(STRCONCAT("Добавяем предмет: '", $it_name, "' ", $it_x, "x", $it_y), 16711680) // синий
    ARRPUSH($items, $it_name)
    ARRPUSH($items, $it_x)
    ARRPUSH($items, $it_y)
    $new_item = STRCONCAT($it_name, ",", $it_x, ",", $it_y)
    TFWRITE($items_filename, $new_item)
END_SUB

SUB(is_end_sceneloop)
    find_pic_nw(1518,32,1562,73, "pause.bmp", 100, 7)
    IF($is_found == #FALSE)
        $sceneloop = #FALSE
    END_IF
END_SUB

SUB(check_pause_zone)
    // Проверка зоны паузы
    IF(($setX > 1510) & ($setY < 85))
        $set = #TRUE
    END_IF
END_SUB

SUB(check_help_zone)
    // Проверка зоны помощи
    IF(($setX > 1470) & ($setY > 760))
        $set = #TRUE
    END_IF
END_SUB

SUB(waiting_for_items_to_click)
    // ожидание клика по предмету
    $wait_time = $_time_t - 1
    $set = #TRUE
    WHILE($set == #TRUE)
        IF($wait_time < $_time_t)
            //HINTPOPUP("Внимание! Готов принять команду")
            LOGWRITEC("Внимание! Готов принять команду", 8355839)
            $wait_time = $_time_t + 10
            WAITMS(50)
        END_IF

        IF(ISKEYDOWN(1) == #TRUE)
            $setX = $_xmouse - $wx1
            $setY = $_ymouse - $wy1
            $set = #FALSE
            WHILE(ISKEYDOWN(1) == #TRUE)  // ожидаем отпускания LM
                WAITMS(50)
            END_CYC

            check_pause_zone()
            check_help_zone()
        END_IF

        IF(ISKEYDOWN(#ESC) == #TRUE)
            $set = #FALSE
            HINTPOPUP("Работа прервана")
            critical_error("Работа прервана")
        END_IF
        WAITMS(30)
    END_CYC
    WAITMS(2500)
END_SUB

SUB(manual_click_words)
    // ручной поиск неизвесных картинок
    LOGWRITEC("Ручной поиск. Внимание!", 8355839)
    photo_items()
    create_ocr_par()
    ocr($ocrpar)
    read_ocr_result()

    UNDEFINE($need_words)
    FOR($res_i=0, $res_i < ARRSIZE($ocr_result))
        ARRPUSH($need_words, $ocr_result[$res_i])
    END_CYC

    $manual_select_word = #TRUE
    WHILE($manual_select_word == #TRUE)
        waiting_for_items_to_click()
        photo_items()
        create_ocr_par()
        ocr($ocrpar)
        read_ocr_result()
        FOR($res_i = 0, $res_i < ARRSIZE($need_words))
            // print("$res_i = ", $res_i)
            // print("$need_words[$res_i] = ", $need_words[$res_i])
            // print("$ocr_result[$res_i] = ", $ocr_result[$res_i])
            IF($need_words[$res_i] != $ocr_result[$res_i])
                $manual_select_word = #FALSE
                add_item($need_words[$res_i], $setX, $setY)
                $res_i = 100
            END_IF
        END_CYC
    END_CYC
END_SUB

SUB(passing_hidden_object_scene, $phos_scene_number)
    $scene_number = $phos_scene_number

    WHILE($location != 16)  // hidden object scene
        WAITMS(100)
        get_location()
    END_CYC

    get_hash_scene()
    read_data_scene()
    main_screenshot_scene()

    read_items()
    IF($loglevel >= 5)
        LOGWRITE("Массив $items:")
        LOG_ARR("$items", ARRSIZE($items))
    END_IF

    $sceneloop = #TRUE
    WHILE($sceneloop == #TRUE)
        $found_words = #TRUE  // ставим для принудительного первого пуска цикла
        WHILE($found_words == #TRUE)
            automat_click_words()
            IF($select_emulator == "Test")  // после тестов убрать
                LOGWRITE("$found_words = ", $found_words)
                $found_words = #FALSE
            END_IF
        END_CYC

        is_end_sceneloop()
        IF($select_emulator == "Test")  // после тестов убрать
            LOGWRITE("$sceneloop = ", $sceneloop)
            // $sceneloop = #FALSE
        END_IF
        // SCREENSHOTFIX($wx1,$wy1, $wx2,$wy2, "CM_1.bmp", 0)

        // ручная часть
        IF($sceneloop == #TRUE)
            manual_click_words()
            is_end_sceneloop()
        END_IF
    END_CYC
    LOGWRITE("Сцена ", $scene_number, " пройдена.", \n, "*************************************************")
END_SUB

SUB(dev)
    IF($location != 16)  // hidden object scene
        critical_error("Не видно сцены на экране")
    END_IF

    get_hash_scene()
    read_data_scene()
    // main_screenshot_scene()
END_SUB

SUB(test_locations_list)
    FOR($i=0, $i < 18)  // -1 to 18
        set_location($i)
        LOGWRITE($location, " - ", $location_name)
    END_CYC
    HALT
END_SUB

SUB(is_chapter_inactive)
    // проверить активна ли текущая глава
    // если нет - останов
    set_abs_region(200,602, 572,640)  // 373x39  all 14547  green_color=11800/10800
    log_region(0,652, $win_w,764)
    GETSCREEN($ar_x1, $ar_y1, $ar_x2, $ar_y2)
    COLORMODE(7, $ar_x1, $ar_y1, $ar_x2, $ar_y2)
    $ici_green_color = PXLCOUNT($ar_x1, $ar_y1, $ar_x2, $ar_y2, 8388479)
    IF($loglevel >= 5)
        LOGWRITE("is_chapter_inactive. $green_color = ", $ici_green_color)
    END_IF
    IF($ici_green_color > 5900)
        // Step 2
        set_abs_region(1078,300, 1487,489)  // 410x190  all 77900  red_color=47844
        log_region(0,652, $win_w,764)
        GETSCREEN($ar_x1, $ar_y1, $ar_x2, $ar_y2)
        COLORMODE(7, $ar_x1, $ar_y1, $ar_x2, $ar_y2)
        $ici_red_color = PXLCOUNT($ar_x1, $ar_y1, $ar_x2, $ar_y2, 8355839)
        IF($loglevel >= 5)
            LOGWRITE("is_chapter_inactive. $red_color = ", $ici_red_color)
        END_IF
        IF($ici_red_color > 40000)
            critical_error(STRCONCAT("Невозможно выбрать заданную главу ", $target_scene_chapter))
        END_IF
    END_IF
END_SUB

SUB(change_tome, $ct_scene_tome)
    // TODO
    // $target_scene_tome
END_SUB

SUB(change_chapter, $cc_scene_chapter)
    $current_scene_chapter = $cc_scene_chapter
    $cc_delay = 2000  // задержка после клика по элементам перемещения между главами
    WHILE($current_scene_chapter != $target_scene_chapter)
        IF(ABS($current_scene_chapter - $target_scene_chapter) == 1)
            // разница в 1 главу
            IF($current_scene_chapter > $target_scene_chapter)
                click(502, 816)
                WAITMS($cc_delay)
            ELSE
                click(1096, 816)
                WAITMS($cc_delay)
            END_IF
        ELSE
            // разница в главах больше 1
            IF($current_scene_chapter > $target_scene_chapter)
                click(606, 816)
                WAITMS($cc_delay)
            ELSE
                click(990, 816)
                WAITMS($cc_delay)
            END_IF
            scan_current_scene_chapter()
        END_IF
        is_chapter_inactive()
    END_CYC
END_SUB

SUB(is_discount_play_more)
    // проверить работу скидки от рекламы на экране play_more
    // $discount_is_valid   - результат bool
    set_abs_region(550,796, 720,836)  // 171x41  lila_color=4980
    GETSCREEN($ar_x1, $ar_y1, $ar_x2, $ar_y2)
    COLORMODE(7, $ar_x1, $ar_y1, $ar_x2, $ar_y2)
    $lila_color = PXLCOUNT($ar_x1, $ar_y1, $ar_x2, $ar_y2, 16744447) // 4980
    IF($lila_color > 4800)
        $discount_is_valid = #TRUE
    ELSE
        $discount_is_valid = #FALSE
    END_IF

    IF($loglevel >= 4)
        LOGWRITE("discount_is_valid = ", $discount_is_valid)
        IF($loglevel >= 5)
            LOGWRITE("$lila_color = ", $lila_color)
        END_IF
    END_IF
END_SUB

SUB(is_discount_scene_cards)
    // проверить работу скидки от рекламы на экране scene_cards
    // $discount_is_valid   - результат bool
    set_abs_region(1270,818, 1440,858)  // lila_color=1636/1537   1398x lila_color=307
    GETSCREEN($ar_x1, $ar_y1, $ar_x2, $ar_y2)
    COLORMODE(7, $ar_x1, $ar_y1, $ar_x2, $ar_y2)
    $lila_color = PXLCOUNT($ar_x1, $ar_y1, $ar_x2, $ar_y2, 16744447)
    IF($lila_color >= 200)
        $discount_is_valid = #TRUE
    ELSE
        $discount_is_valid = #FALSE
    END_IF

    IF($loglevel >= 5)
        LOGWRITE("discount_is_valid = ", $discount_is_valid)
        LOGWRITE("$lila_color = ", $lila_color)
    END_IF
END_SUB

SUB(add_card, $ac_card_scene_number, $ac_card_x, $ac_card_y, $ac_go_x, $ac_go_y)
    ARRPUSH($cards, $ac_card_scene_number)  // номер уровня
    ARRPUSH($cards, $ac_card_x)
    ARRPUSH($cards, $ac_card_y)
    ARRPUSH($cards, $ac_go_x)  // кнопка запуска
    ARRPUSH($cards, $ac_go_y)  // кнопка запуска
END_SUB

SUB(find_primary_card)
    UNDEFINE($cards)
    is_discount_scene_cards()
    IF($discount_is_valid)
        $type_key_scene_play = "key_scene_play_blue.bmp"
    ELSE
        $type_key_scene_play = "key_scene_play_green.bmp"
    END_IF
    IF($loglevel >= 5)
        LOGWRITE("type_key = ", $type_key_scene_play)
    END_IF

    set_abs_region(0,652, $win_w,764)
    log_region(0,652, $win_w,764)

    find_pic_nw(0,652, $win_w,764, $type_key_scene_play, 100, 6)
    IF($is_found)
        // result block: $card_center_x, $card_center_y

        // клик +120 -16
        $relative_found_x = $found_x - $wx1  // 135-152 = 17
        $field_center = $win_w / 2 - 152
        $card_delta_x = ABS($relative_found_x - $field_center)
        $delta_w = INT(($card_delta_x * 0.035) + 0.9)
        $card_center_x = $relative_found_x + 152 - $delta_w
        // max dy  6 px
        $delta_h = INT($card_delta_x * 0.009)
        $card_center_y = 492 - $delta_h
        IF($loglevel >= 5)
            LOGWRITE()
            LOGWRITE("Данные расчёта первичной карты:")
            LOGWRITE("   $card_delta_x ", $card_delta_x)
            LOGWRITE("   $delta_w ", $delta_w)
            LOGWRITE("   $card_center_x ", $card_center_x)
            LOGWRITE("   $delta_h ", $delta_h)
            LOGWRITE("   $card_center_y ", $card_center_y)
        END_IF

        // 54x34  +-27 +-17
        set_abs_region($card_center_x-25, $card_center_y-16, $card_center_x+25, $card_center_y+16)
        scan_scene_number()

        add_card($card_scene_number, $card_center_x, $card_center_y, $found_x+120, $found_y-16)
        rel_move($card_center_x, $card_center_y)
        // MOVE($found_x, $found_y)
        WAITMS(1000)
    END_IF
END_SUB

SUB(main)
    $mainloop = #TRUE
    WHILE($mainloop)
        get_location()

        // 5 load game 1 - экран загрузки игры
        // 13 advertising timer - реклама таймер
        IF(($location == 5) | ($location == 13))
            waiting_change_location($location)
        END_IF

        // 12 discount - скидка за рекламу
        IF($location == 12)
            click(490, 738)
            WAITMS(700)
        END_IF

        // 14 advertising is over - сбой рекламы
        IF($location == 14)
            click(774, 674)
            WAITMS(800)
        END_IF

        // 15 touch for start - коснитесь, чтобы начать
        IF(($location == 15) & ($select_emulator != "Test"))
            click(800, 450)
            WAITMS(200)
        END_IF

        // 17 scene finish - сцена пройдена (экран)
        IF($location == 17)
            click(330, 640)
            WAITMS(200)
        END_IF

        // 18 play more - играть ещё (продолжить на этой же сцене)
        IF($location == 18)
            set_abs_region(106,30, 186,66)
            scan_energy()
            go_to_island = #FALSE
            IF($energy >= $accumulate_energy)
                is_discount_play_more()
                IF($discount_is_valid)
                    // играть
                    click(700, 822)
                    WAITMS(1000)
                ELSE
                    go_to_island = #TRUE
                END_IF
            ELSE
                go_to_island = #TRUE
            END_IF

            IF(go_to_island)
                // назад на остров
                click(280, 822)
                WAITMS(1000)
            END_IF
        END_IF

        // 10 island - главный экран (остров орхидей)
        IF($location == 10)
            set_abs_region(1154,30, 1232,66)
            scan_energy()
            IF($energy >= $accumulate_energy)
                click(1490, 790)
                WAITMS(3000)
            ELSE
                WAIT(60)
            END_IF
        END_IF

        // 11 scene cards - карточки выбора сцены
        IF($location == 11)
            IF($energy == -1)
                set_abs_region(996,30, 1072,66)
                scan_energy()
            END_IF

            $no_changes_location11 = #TRUE
            IF($energy >= $accumulate_energy)
                find_primary_card()
                IF(ARRSIZE($cards) > 1)
                    parse_scene_number($cards[0])

                    IF($scene_tome != $target_scene_tome)
                        // $no_changes_location11 = #FALSE // временно отключил, для проверки переключения главы
                        IF($loglevel >= 4)
                            LOGWRITE("Номер тома не совпадает! ", $scene_tome, " вместо ", $target_scene_tome)
                        END_IF
                        change_tome($scene_tome)  // TODO
                    END_IF

                    IF(($no_changes_location11) & ($scene_chapter != $target_scene_chapter))
                        $no_changes_location11 = #FALSE
                        IF($loglevel >= 4)
                            LOGWRITE("Номер главы не совпадает! ", $scene_chapter, " вместо ", $target_scene_chapter)
                        END_IF
                        change_chapter($scene_chapter)
                    END_IF
                ELSE
                    is_chapter_inactive()
                    $no_changes_location11 = #FALSE
                    WAITMS(500)
                END_IF
            ELSE
                $no_changes_location11 = #FALSE
                // назад на остров (закрыть scene cards)
                click(1542, 56)
                WAITMS(1000)
            END_IF

            IF($no_changes_location11)
                // TODO
                // просмотр рекламы
                // переход к поиску предметов
            END_IF

            HALT
        END_IF

        // 16 hidden object scene - сцена поиска предметов

        // IF($input_sn == 0)
            // TODO определить уровень
        // END_IF
        // click($play_x, $play_y)
        // WAITMS(500)
        // passing_hidden_object_scene($input_sn)


        IF($location == 0)
            WAITMS(500)
        END_IF
        WAITMS(300)
    END_CYC
    // $location  $location_name
END_SUB

//======================================================================================================================
//**********************************************************************************************************************

init()

// test_locations_list()
//input_scene_number()
// dev()
// is_discount_scene_cards()
// HALT

main()

HALT


IF($loglevel >= 4)
    //
END_IF
